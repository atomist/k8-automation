apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: atomist
    app.kubernetes.io/name: sdm
    app.kubernetes.io/part-of: sdm
  name: sdm
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: atomist
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    atomist.com/workspaceId: T29E48P34
  name: k8s-sdm
  namespace: sdm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: atomist
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    atomist.com/workspaceId: T29E48P34
  name: k8s-sdm
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "secrets", "serviceaccounts", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: atomist
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    atomist.com/workspaceId: T29E48P34
  name: k8s-sdm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-sdm
subjects:
  - kind: ServiceAccount
    name: k8s-sdm
    namespace: sdm
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app.kubernetes.io/managed-by: atomist
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    atomist.com/workspaceId: T29E48P34
  name: k8s-sdm
  namespace: sdm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-sdm
      atomist.com/workspaceId: T29E48P34
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: atomist
        app.kubernetes.io/name: k8s-sdm
        app.kubernetes.io/part-of: k8s-sdm
        app.kubernetes.io/version: "1"
        atomist.com/workspaceId: T29E48P34
    spec:
      containers:
        - env:
            - name: ATOMIST_CONFIG_PATH
              value: /opt/atm/client.config.json
            - name: HOME
              value: /home/atomist
            - name: TMPDIR
              value: /tmp
          image: atomist/k8s-sdm:1.7.0
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
          name: k8s-sdm
          ports:
            - name: http
              containerPort: 2866
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 768Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 2866
            runAsNonRoot: true
            runAsUser: 2866
          volumeMounts:
            - mountPath: /opt/atm
              name: k8s-sdm
              readOnly: true
            - mountPath: /home/atomist
              name: atomist-home
            - mountPath: /tmp
              name: sdm-tmp
      initContainers:
        - args:
            - git config --global user.email 'bot@atomist.com' && git config --global user.name 'Atomist Bot'
          command: ["/bin/sh", "-c"]
          env:
            - name: HOME
              value: /home/atomist
          image: atomist/sdm-base:0.4.1
          name: atomist-home-git
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 2866
            runAsNonRoot: true
            runAsUser: 2866
          volumeMounts:
            - mountPath: /home/atomist
              name: atomist-home
      securityContext:
        fsGroup: 2866
      serviceAccountName: k8s-sdm
      volumes:
        - name: k8s-sdm
          secret:
            defaultMode: 292
            secretName: k8s-sdm
        - emptyDir: {}
          name: atomist-home
        - emptyDir: {}
          name: sdm-tmp
