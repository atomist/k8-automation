apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-sdm
  labels:
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    app.kubernetes.io/managed-by: atomist
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: k8s-sdm
  labels:
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    app.kubernetes.io/managed-by: atomist
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "secrets", "serviceaccounts", "services"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps", "extensions"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["clusterroles", "clusterrolebindings", "roles", "rolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: k8s-sdm
  labels:
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    app.kubernetes.io/managed-by: atomist
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: k8s-sdm
subjects:
  - kind: ServiceAccount
    name: k8s-sdm
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: k8s-sdm
  labels:
    app.kubernetes.io/name: k8s-sdm
    app.kubernetes.io/part-of: k8s-sdm
    app.kubernetes.io/managed-by: atomist
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-sdm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-sdm
        app.kubernetes.io/part-of: k8s-sdm
        app.kubernetes.io/managed-by: atomist
        app.kubernetes.io/version: "1"
    spec:
      serviceAccountName: k8s-sdm
      containers:
        - name: k8s-sdm
          image: atomist/k8s-sdm:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: ATOMIST_CONFIG_PATH
              value: /opt/atm/client.config.json
          ports:
            - name: http
              containerPort: 2866
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            initialDelaySeconds: 20
            timeoutSeconds: 3
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 500m
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 320Mi
          volumeMounts:
            - mountPath: /opt/atm
              name: k8s-sdm
              readOnly: true
      volumes:
        - name: k8s-sdm
          secret:
            defaultMode: 256
            secretName: k8s-sdm
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
